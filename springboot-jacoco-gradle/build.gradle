plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.5'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'jacoco'
}

group = 'swe.group2'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

//tasks.named('test') {
//	useJUnitPlatform()
//}

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport // report is always generated after tests run
	jacoco {
		enabled = true
	}
}

jacoco {
	toolVersion = "0.8.8"
	// reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
	// default report Directory: layout.buildDirectory.dir("reports/jacoco")
}

jacocoTestReport {
	dependsOn test // tests are required to run before generating the report

	reports {
		xml.required = true
		csv.required = false
		html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
	}
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
				minimum = 0.3
			}
		}

		rule {
			enabled = false
			element = 'CLASS'
			includes = ['org.gradle.*']

			limit {
				counter = 'LINE'
				value = 'TOTALCOUNT'
				maximum = 0.3
			}
		}
	}
}

//jacocoTestCoverageVerification {
//	violationRules {
//		rule {
//			limit {
//				// 'counter'를 지정하지 않으면 default는 'INSTRUCTION'
//				// 'value'를 지정하지 않으면 default는 'COVEREDRATIO'
//				minimum = 0.5
//			}
//		}

//		rule {
//
//			enabled = true	 // 룰을 간단히 켜고 끌 수 있다.
//			element = 'CLASS' // 룰을 체크할 단위는 클래스 단위
//			includes = ['org.gradle.*']
//
//			// 브랜치 커버리지를 최소한 90% 만족시켜야 한다.
//			limit {
//				counter = 'BRANCH'
//				value = 'COVEREDRATIO'
//				minimum = 0.90
//			}
//
//			// 라인 커버리지를 최소한 80% 만족시켜야 한다.
//			limit {
//				counter = 'LINE'
//				value = 'COVEREDRATIO'
//				minimum = 0.80
//			}
//
//			// 빈 줄을 제외한 코드의 라인수를 최대 200라인으로 제한한다.
//			limit {
//				counter = 'LINE'
//				value = 'TOTALCOUNT'
//				maximum = 200
//				minimum = 8
//			}
//		}
//	}
//}
